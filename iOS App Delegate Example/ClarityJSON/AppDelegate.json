{
    "entity_code":"APPDG",
    "entity_functions" : [
        {
            "function_number":1,
            "function_number_always_custom":false,
            "function_type":"o",
            "function_nodes":[
                {
                    "print_number":1,
                    "node_type":0,
                    "event_description":"",
                    "effect_description":""
                },
                {
                    "print_number":2,
                    "node_type":1,
                    "event_description":"Description of a conditional event that resolves to true (pet type is a dog)",
                    "effect_description":"description of what is expected to occur as a result (nothing)"
                },
                {
                    "print_number":3,
                    "node_type":2,
                    "event_description":"A conditional event that resolves to false (pet type is a cat)",
                    "effect_description":"call function to evalute pet type again to demo use in switch statements"
                }
            ]
        },
        {
            "function_number":26,
            "function_number_always_custom":false,
            "function_type":"f",
            "function_nodes":[
                {
                    "print_number":199,
                    "node_type":0,
                    "event_description":"(not used – leave empty)",
                    "effect_description":"(not used – leave empty)"
                },
                {
                    "print_number":201,
                    "node_type":5,
                    "event_description":"Description of a Switch case that resolves to true (pet type is a dog)",
                    "effect_description":"describe will happen as a result of the case being true"
                },
                {
                    "print_number":202,
                    "node_type":6,
                    "event_description":"A Switch statement reached the default case",
                    "effect_description":"describe will happen as a result of reaching the default"
                },
                {
                    "print_number":203,
                    "node_type":5,
                    "event_description":"Pet type is a cat",
                    "effect_description":"Never reached in the demo (it is safe to omit print number references from JSON)"
                },
                {
                    "print_number":204,
                    "node_type":3,
                    "event_description":"Pet type is a dog – this is now considered a negative true outcome",
                    "effect_description":"call a function to change the pet type"
                },
                {
                    "print_number":205,
                    "node_type":11,
                    "event_description":"newPet (variable name or a description of the value)",
                    "effect_description":"(not used – leave empty)"
                }
            ]
        },
        {
            "function_number":27,
            "function_number_always_custom":false,
            "function_type":"f",
            "function_nodes":[
                {
                    "print_number":220,
                    "node_type":0,
                    "event_description":"",
                    "effect_description":""
                }
            ]
        },
        {
            "function_number":45,
            "function_number_always_custom":false,
            "function_type":"f",
            "function_nodes":[
                {
                    "print_number":225,
                    "node_type":0,
                    "event_description":"",
                    "effect_description":""
                },
                {
                    "print_number":226,
                    "node_type":11,
                    "event_description":"allocationData",
                    "effect_description":""
                },
                {
                    "print_number":227,
                    "node_type":9,
                    "event_description":"Task allocated successfully",
                    "effect_description":"call fake action method from an imaginary module"
                },

                {
                    "print_number":228,
                    "node_type":12,
                    "event_description":"allocation",
                    "effect_description":""
                },
                {
                    "print_number":229,
                    "node_type":10,
                    "event_description":"Job failed to allocate",
                    "effect_description":"allocate to another employee"
                }
            ]
        },
        {
            "function_number":50,
            "function_number_always_custom":false,
            "function_type":"f",
            "function_nodes":[
                {
                    "print_number":230,
                    "node_type":0,
                    "event_description":"",
                    "effect_description":""
                },
                {
                    "print_number":231,
                    "node_type":3,
                    "event_description":"The employee is Graham",
                    "effect_description":"Graham is unavailable – throw a employee engaged error "
                },
                {
                    "print_number":232,
                    "node_type":4,
                    "event_description":"The employee is NOT Graham (condition false with a positive outcome)",
                    "effect_description":"Allocate the task"
                }
            ]
        }
        
    ]
}


